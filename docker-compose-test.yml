services:
  kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: kafka
    ports:
      - "19092:19092"
    environment:
      CLUSTER_ID: ${KAFKA_CLUSTER_ID}
      KAFKA_NODE_ID: 1
      TOPIC_AUTO_CREATE: false
      KAFKA_PROCESS_ROLES: broker,controller
      # Defines listeners
      KAFKA_LISTENERS: INTERNAL://kafka:9092,CONTROLLER://kafka:9093,EXTERNAL://:19092
      # What clients should use to reach this broker
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:19092
      # Security protocol for each listener
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # Listener used for broker-to-broker communication
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      # Replication factor for the internal consumer offset topic that Kafka automatically creates to manage consumer group state
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - kafka-net

  kafka-init:
    image: confluentinc/cp-kafka:7.8.0
    container_name: kafka-init
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_INIT_TOPICS: ${KAFKA_EVENT_TOPIC}
      KAFKA_TOPIC_PARTITIONS: 1
      KAFKA_TOPIC_RF: 1
    volumes:
      - ./scripts/init-topics.sh:/init-topics.sh:ro
    entrypoint: [ "bash", "/init-topics.sh" ]
    networks:
      - kafka-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-cluster-ui
    ports:
      - "8888:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge