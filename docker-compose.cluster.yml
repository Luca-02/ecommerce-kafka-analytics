services:
  kafka1:
    image: confluentinc/cp-kafka:7.2.15
    hostname: kafka1
    container_name: kafka1
    ports:
      - "19092:19092"
    environment:
      KAFKA_KRAFT_MODE: "true"
      CLUSTER_ID: ${KAFKA_CLUSTER_ID}
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENERS: 'INTERNAL://kafka1:9092,CONTROLLER://kafka1:9093,EXTERNAL://0.0.0.0:19092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka1:9092,EXTERNAL://localhost:19092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:9093,2@kafka2:9093,3@kafka3:9093'
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
    volumes:
      - kafka1-data:/var/lib/kafka/data
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
      - kafka-net

  kafka2:
    image: confluentinc/cp-kafka:7.2.15
    hostname: kafka2
    container_name: kafka2
    ports:
      - "29092:29092"
    environment:
      KAFKA_KRAFT_MODE: "true"
      CLUSTER_ID: ${KAFKA_CLUSTER_ID}
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENERS: 'INTERNAL://kafka2:9092,CONTROLLER://kafka2:9093,EXTERNAL://0.0.0.0:29092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka2:9092,EXTERNAL://localhost:29092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:9093,2@kafka2:9093,3@kafka3:9093'
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
    volumes:
      - kafka2-data:/var/lib/kafka/data
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
      - kafka-net

  kafka3:
    image: confluentinc/cp-kafka:7.2.15
    hostname: kafka3
    container_name: kafka3
    ports:
      - "39092:39092"
    environment:
      KAFKA_KRAFT_MODE: "true"
      CLUSTER_ID: ${KAFKA_CLUSTER_ID}
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENERS: 'INTERNAL://kafka3:9092,CONTROLLER://kafka3:9093,EXTERNAL://0.0.0.0:39092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka3:9092,EXTERNAL://localhost:39092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:9093,2@kafka2:9093,3@kafka3:9093'
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
    volumes:
      - kafka3-data:/var/lib/kafka/data
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
      - kafka-net

  kafka-init:
    image: confluentinc/cp-kafka:7.2.15
    container_name: kafka-init
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    environment:
      KAFKA_BOOTSTRAP_SERVERS: 'kafka1:9092,kafka2:9092,kafka3:9092'
      KAFKA_INIT_TOPICS: ${KAFKA_INIT_TOPICS}
      KAFKA_TOPIC_PARTITIONS: 3
      KAFKA_TOPIC_RF: 3
    volumes:
      - ./scripts/init-topics.sh:/init-topics.sh:ro
    entrypoint: [ "bash", "/init-topics.sh" ]
    networks:
      - kafka-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-cluster-ui
    ports:
      - "8080:8080"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9092,kafka3:9092
    networks:
      - kafka-net

volumes:
  kafka1-data:
  kafka2-data:
  kafka3-data:

networks:
  kafka-net:
    driver: bridge


#services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.2.15
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#      ZOOKEEPER_AUTH_PROVIDER_1: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
#      ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: sasl
#      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/zookeeper_jaas.conf"
#    volumes:
#      - ./config/zookeeper_jaas.conf:/etc/kafka/zookeeper_jaas.conf
#    networks:
#      - kafka-net
#
#  kafka:
#    image: confluentinc/cp-kafka:7.2.15
#    container_name: kafka
#    ports:
#      - "19092:19092"
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_NODE_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://:19092
#      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:19092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:SASL_SSL
#      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#
#      # SSL Configuration
#      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/keystore.jks
#      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/truststore.jks
#      KAFKA_SSL_KEY_PASSWORD: ${KAFKA_SSL_PASSWORD}
#      KAFKA_SSL_KEYSTORE_PASSWORD: ${KAFKA_SSL_PASSWORD}
#      KAFKA_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_SSL_PASSWORD}
#      KAFKA_SSL_CLIENT_AUTH: none
#      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
#
#      # SASL Configuration
#      KAFKA_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256
#
#      # ACL Configuration
#      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
#      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: true
#      KAFKA_SUPER_USERS: User:admin
#
#      # JAAS Configuration
#      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
#
#      # Replication
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#    volumes:
#      - ./certs:/etc/kafka/secrets
#      - ./config/kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
#    networks:
#      - kafka-net
#
#  kafka-init:
#    image: confluentinc/cp-kafka:7.2.15
#    container_name: kafka-init
#    depends_on:
#      - kafka
#    environment:
#      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    volumes:
#      - ./scripts/kafka-init.sh:/kafka-init.sh:ro
#    command: [ "bash", "/kafka-init.sh" ]
#    networks:
#      - kafka-net
#
#  kafka-ui:
#    image: provectuslabs/kafka-ui:latest
#    container_name: kafka-ui
#    ports:
#      - "8888:8080"
#    depends_on:
#      - kafka
#    environment:
#      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_SSL
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:19092
#      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: SCRAM-SHA-256
#      KAFKA_CLUSTERS_0_PROPERTIES_PROTOCOL: SASL
#      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="admin-secret";
#      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
#      KAFKA_CLUSTERS_0_SSL_TRUSTSTORELOCATION: /etc/kafka/secrets/truststore.jks
#      KAFKA_CLUSTERS_0_SSL_TRUSTSTOREPASSWORD: ${KAFKA_SSL_PASSWORD}
#    volumes:
#      - ./certs:/etc/kafka/secrets
#    networks:
#      - kafka-net
#
##  producer:
##    build:
##      context: .
##      dockerfile: ./event-simulator-service/Dockerfile
##    container_name: producer
##    depends_on:
##      kafka:
##        condition: service_healthy
##    environment:
##      DATA_PATH: ./data
##      KAFKA_BROKERS: kafka:9092
##      KAFKA_EVENT_TOPIC: ${KAFKA_EVENT_TOPIC}
##      NUMBER_SIMULATION_PROCESSES: 4
##      MIN_SESSION_INTERVAL_SECONDS: 1
##      MAX_SESSION_INTERVAL_SECONDS: 10
##      MIN_EVENT_INTERVAL_SECONDS: 1
##      MAX_EVENT_INTERVAL_SECONDS: 10
##    networks:
##      - kafka-net
##
##  consumer:
##    build:
##      context: .
##      dockerfile: ./analytics-service/Dockerfile
##    container_name: consumer
##    depends_on:
##      kafka:
##        condition: service_healthy
##    environment:
##      KAFKA_BROKERS: kafka:9092
##      KAFKA_GROUP_ID: analytics-service
##      KAFKA_EVENT_TOPIC: e-commerce-events
##      WORKER_PROCESS_NUMBER: 8
##      GOOGLE_APPLICATION_CREDENTIALS: ../secret/serviceAccountKey.json
##      GCLOUD_PROJECT: ecommerce-kafka-analytic-b9267
##      FIRESTORE_EMULATOR_HOST: host.docker.internal:8080
##    volumes:
##      - ./secret/serviceAccountKey.json:/secret/serviceAccountKey.json
##    networks:
##      - kafka-net
#
#networks:
#  kafka-net:
#    driver: bridge
