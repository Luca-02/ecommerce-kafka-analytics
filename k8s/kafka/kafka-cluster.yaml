apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: demo-cluster
  namespace: kafka
  labels:
    app: kafka-demo
spec:
  # Configurazione Kafka con 3 repliche
  kafka:
    replicas: 3
    version: 3.6.0
    
    # Configurazione listeners - manteniamo semplice per demo locale
    listeners:
      # Listener interno per comunicazione tra broker (TLS)
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: tls
      # Listener per client con SASL SCRAM
      - name: sasl
        port: 9094
        type: internal
        tls: true
        authentication:
          type: scram-sha-512
      # Listener esterno per accesso da fuori cluster
      - name: external
        port: 9095
        type: nodeport
        tls: true
        authentication:
          type: scram-sha-512
        configuration:
          bootstrap:
            nodePort: 32100
          brokers:
          - broker: 0
            nodePort: 32101
          - broker: 1
            nodePort: 32102
          - broker: 2
            nodePort: 32103

    # Configurazione storage - persistente per demo
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 10Gi
        deleteClaim: false

    # Configurazione Kafka
    config:
      # Replication e durabilit√†
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      
      # Sicurezza - comunicazione inter-broker
      inter.broker.protocol.version: "3.6"
      ssl.cipher.suites: "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
      ssl.enabled.protocols: "TLSv1.2,TLSv1.3"
      ssl.protocol: "TLSv1.3"
      
      # ACL e autorizzazione
      authorizer.class.name: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      super.users: User:admin
      allow.everyone.if.no.acl.found: false

    # Risorse per ogni broker
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"

    # JVM options
    jvmOptions:
      -Xms: "512m"
      -Xmx: "1g"

  # Configurazione Zookeeper con 3 repliche
  zookeeper:
    replicas: 3
    
    storage:
      type: persistent-claim
      size: 5Gi
      deleteClaim: false

    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"

    jvmOptions:
      -Xms: "256m"
      -Xmx: "512m"

  # Entity Operator per gestire topic e utenti
  entityOperator:
    topicOperator:
      resources:
        requests:
          memory: "256Mi"
          cpu: "100m"
        limits:
          memory: "512Mi"
          cpu: "200m"
    userOperator:
      resources:
        requests:
          memory: "256Mi"
          cpu: "100m"
        limits:
          memory: "512Mi"
          cpu: "200m"

  # Cruise Control per bilanciamento automatico (opzionale per demo)
  cruiseControl:
    resources:
      requests:
        memory: "512Mi"
        cpu: "200m"
      limits:
        memory: "1Gi"
        cpu: "500m"